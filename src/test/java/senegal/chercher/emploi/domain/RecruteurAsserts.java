package senegal.chercher.emploi.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RecruteurAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecruteurAllPropertiesEquals(Recruteur expected, Recruteur actual) {
        assertRecruteurAutoGeneratedPropertiesEquals(expected, actual);
        assertRecruteurAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecruteurAllUpdatablePropertiesEquals(Recruteur expected, Recruteur actual) {
        assertRecruteurUpdatableFieldsEquals(expected, actual);
        assertRecruteurUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecruteurAutoGeneratedPropertiesEquals(Recruteur expected, Recruteur actual) {
        assertThat(actual)
            .as("Verify Recruteur auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecruteurUpdatableFieldsEquals(Recruteur expected, Recruteur actual) {
        assertThat(actual)
            .as("Verify Recruteur relevant properties")
            .satisfies(a -> assertThat(a.getEntreprise()).as("check entreprise").isEqualTo(expected.getEntreprise()))
            .satisfies(a -> assertThat(a.getSecteur()).as("check secteur").isEqualTo(expected.getSecteur()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecruteurUpdatableRelationshipsEquals(Recruteur expected, Recruteur actual) {
        assertThat(actual)
            .as("Verify Recruteur relationships")
            .satisfies(a -> assertThat(a.getUtilisateur()).as("check utilisateur").isEqualTo(expected.getUtilisateur()));
    }
}
